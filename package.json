{
  "name": "extension-dev-helper",
  "displayName": "Extension Development Helper",
  "description": "Helper for VSCode Extension Development",
  "version": "2.0.1",
  "license": "MIT",
  "publisher": "cweijan",
  "engines": {
    "vscode": "^1.68.0"
  },
  "icon": "images/logo.png",
  "categories": [
    "Snippets",
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/vscode-ext-studio/vscode-extension-dev-helper"
  },
  "bugs": {
    "url": "https://github.com/vscode-ext-studio/vscode-extension-dev-helper/issues"
  },
  "activationEvents": [
    "onLanguage:json",
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:javascriptreact",
    "onLanguage:typescriptreact",
    "onLanguage:vue",
    "onLanguage:html"
  ],
  "main": "./out/extension",
  "contributes": {
    "snippets": [
      {
        "language": "javascript",
        "path": "./snippets/javascript.json"
      },
      {
        "language": "typescript",
        "path": "./snippets/javascript.json"
      },
      {
        "language": "java",
        "path": "./snippets/java.json"
      },
      {
        "language": "vue",
        "path": "./snippets/vue.json"
      }
    ],
    "commands": [
      {
        "command": "extension.runFile",
        "title": "Run Current File",
        "icon": "$(run)"
      },
      {
        "command": "npm.jumper.search",
        "title": "Search node_modules"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "extension.runFile",
          "when": "resourceLangId == javascript || resourceLangId == typescript",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "npm.jumper.search",
          "when": "explorerResourceIsFolder && resourceFilename == 'node_modules'",
          "group": "0navigation@1"
        }
      ]
    },
    "configuration": {
      "title": "Extension Configuration",
      "properties": {
        "runner.jsRunner": {
          "type": "object",
          "default": {
            "command": "node",
            "args": []
          },
          "description": "Configuration for JavaScript file runner"
        },
        "runner.tsRunner": {
          "type": "object",
          "default": {
            "command": "tsx",
            "args": []
          },
          "description": "Configuration for TypeScript file runner"
        },
        "postfix.languages": {
          "type": "array",
          "description": "A list of languages in which the completion will be available",
          "default": [
            "javascript",
            "typescript",
            "javascriptreact",
            "typescriptreact",
            "vue",
            "svelte",
            "html"
          ]
        },
        "postfix.undefinedMode": {
          "type": "string",
          "markdownDescription": "Determines how the `.undefined` and `.notundefined` templates work",
          "default": "Equal",
          "enum": [
            "Equal",
            "Typeof"
          ],
          "enumDescriptions": [
            "if (expr === undefined)",
            "if (typeof expr === \"undefined\")"
          ]
        },
        "postfix.snippetPreviewMode": {
          "type": "string",
          "enum": [
            "raw",
            "inserted"
          ],
          "default": "inserted",
          "markdownEnumDescriptions": [
            "Raw snippet as you defined in settings.json",
            "The inserted text variant"
          ]
        },
        "postfix.customTemplates": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "body"
            ],
            "defaultSnippets": [
              {
                "label": "New postfix",
                "body": {
                  "name": "$1",
                  "body": "$2",
                  "when": [
                    "$3"
                  ]
                }
              }
            ],
            "properties": {
              "name": {
                "type": "string",
                "suggestSortText": "0",
                "description": "Name of the template. It will be used in auto-complete suggestions"
              },
              "description": {
                "type": "string",
                "description": "Description of the template. It will be used in auto-complete suggestions"
              },
              "body": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ],
                "markdownDescription": "Body of the template. `{{expr}}` will be replaced with the expression before the cursor"
              },
              "when": {
                "type": "array",
                "description": "Context in which the template should be suggested",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "enum": [
                    "identifier",
                    "expression",
                    "binary-expression",
                    "unary-expression",
                    "function-call",
                    "new-expression",
                    "string-literal",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "postfix.customTemplate.mergeMode": {
          "type": "string",
          "markdownDescription": "Determines how custom templates are shown if they share a name with built-in template:\n`append` - both built-in and custom template will be shown\n`override` - only custom template will be shown (it overrides built-in one)",
          "default": "append",
          "enum": [
            "append",
            "override"
          ]
        },
        "postfix.inferVariableName": {
          "type": "boolean",
          "markdownDescription": "Try to guess variable names for `var`, `let`, `const`, `forEach` and `forof` templates.",
          "default": true
        },
        "postfix.disabledBuiltinTemplates": {
          "type": "array",
          "markdownDescription": "Name all built-in templates that you want to disable, eg. `forof`",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "default": []
        },
        "npm-outdated.level": {
          "order": 1000,
          "type": "string",
          "default": "major",
          "enum": [
            "major",
            "minor",
            "patch"
          ],
          "enumDescriptions": [
            "%npm-outdated.configuration.level.major.description%",
            "%npm-outdated.configuration.level.minor.description%",
            "%npm-outdated.configuration.level.patch.description%"
          ],
          "markdownDescription": "%npm-outdated.configuration.level.description%"
        },
        "npm-outdated.majorUpdateProtection": {
          "order": 2000,
          "type": "boolean",
          "default": false,
          "markdownDescription": "%npm-outdated.configuration.majorUpdateProtection.description%"
        },
        "npm-outdated.decorations": {
          "order": 3000,
          "type": "string",
          "enum": [
            "fancy",
            "simple",
            "disabled"
          ],
          "enumDescriptions": [
            "%npm-outdated.configuration.decorations.fancy.description%",
            "%npm-outdated.configuration.decorations.simple.description%",
            "%npm-outdated.configuration.decorations.disabled.description%"
          ],
          "default": "fancy",
          "markdownDescription": "%npm-outdated.configuration.decorations.description%"
        },
        "npm-outdated.cacheLifetime": {
          "order": 9000,
          "type": "number",
          "default": 60,
          "minimum": 1,
          "markdownDescription": "%npm-outdated.configuration.cacheLifetime.description%"
        },
        "npm-outdated.parallelProcessesLimit": {
          "order": 9100,
          "type": "number",
          "default": 20,
          "minimum": 0,
          "markdownDescription": "%npm-outdated.configuration.parallelProcessesLimit.description%"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "node build.mjs --production",
    "compile": "node build.mjs",
    "test": "cross-env NODE_ENV=test node ./out/test/runTests.js",
    "lint": "eslint .",
    "package": "vsce package --no-dependencies",
    "deploy": "vsce publish"
  },
  "devDependencies": {
    "@stylistic/eslint-plugin-js": "^4.2.0",
    "@types/node": "^20.17.23",
    "@types/vscode": "^1.68.0",
    "esbuild": "^0.17.4",
    "eslint": "^9.0.0",
    "eslint-plugin-unused-imports": "^4.0.0",
    "typescript-eslint": "^8.29.1"
  },
  "dependencies": {
    "glob": "^7.1.3",
    "load-json-file": "^6.0.0",
    "inflection": "^3.0.2",
    "typescript": "^5.0.4",
    "vscode-snippet-parser": "^0.0.5"
  }
}